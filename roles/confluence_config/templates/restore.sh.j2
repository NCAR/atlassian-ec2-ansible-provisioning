#!/bin/bash

APP=confluence
backupdir=$1

# Where we extract attachments to if we're upload to s3
# Might need to be large
ATTACHMENTS_TMPDIR='/var/atlassian/application-data'

if test -z $backupdir || ! test -d $backupdir; then
   cat << EOF
Usage: $0 backup_dir

Restore database and home directory for app "$APP";
backupdir must contain files home.tgz and db.sql.gz

THE APPLICATION SHOULD BE STOPPED BEFORE RESTORE!
EOF
exit 1
fi

if systemctl is-active --quiet $APP; then
    echo "Service \"$APP\" is running; must be stopped before restore."
    exit 1
fi

if ! test -e "${backupdir}/home.tgz"; then
    echo "Backup dir is missing file home.tgz"
    exit 1
fi

if ! test -e "${backupdir}/db.sql.gz"; then
    echo "Backup dir is missing file db.sql.gz"
    exit 1
fi

#
# Restore home directory
# FIXME for incremental, we probably also need to exclude ./authentication-plugin-keys
#
excludes=$(mktemp)
cat <<EXCLUDES >$excludes
*/confluence.cfg.xml
*/synchrony-args.properties
*/keys/*
*/secrets-config.yaml
*/secured/*
./logs/*
./temp/*
EXCLUDES

attachments_bucket='{{ atl_attachments_bucket }}'
if ! test -z $attachments_bucket; then
echo './attachments/v4/*' >> $excludes
fi

homedir="/var/atlassian/application-data/${APP}"
echo "Restoring home directory"
tar -C $homedir -X $excludes -zxf "${backupdir}/home.tgz" .
chown -R {{ atl_product_user }}:{{ atl_product_user }} $homedir
rm $excludes

#
# Upload attachments to S3 if we're using that
#
if ! test -z $attachments_bucket; then
    echo "Extracting attachments for upload to s3"
    attachments_tmpdir=$(mktemp -d -p $ATTACHMENTS_TMPDIR)
    tar -C $attachments_tmpdir -zxf "${backupdir}/home.tgz" './attachments/v4/'
    aws s3 sync $attachments_tmpdir "s3://${attachments_bucket}/confluence/attachments/v4" --delete
    rm -rf $attachments_tmpdir
fi

mycnf=$(/usr/local/bin/create_mycnf.sh)

# Change the baseurl FQDN in the dump to our current one on restore
src_site_fqdn=$(cat "${homedir}/SITE_FQDN")
target_site_fqdn=$(mysql --defaults-file=$mycnf -sre "select BANDANAVALUE from BANDANA where BANDANACONTEXT = '_GLOBAL' and BANDANAKEY = 'atlassian.confluence.settings';" | perl -ne 'm(\Q<baseUrl>https://\E(.*)<.*) && print $1;')

echo "Restoring database"
gunzip < "${backupdir}/db.sql.gz" \
    | perl -pe "s/\Q$src_site_fqdn\E/$target_site_fqdn/g" \
    | perl -pe 's/DEFINER=.*?(?=[* ])/DEFINER=CURRENT_USER/;' \
    | mysql --defaults-file=$mycnf

## Save transformed db dump for debugging
#
# gunzip < "${backupdir}/db.sql.gz" \
#     | perl -pe "s/\Q$src_site_fqdn\E/$target_site_fqdn/g" \
#     | perl -pe 's/DEFINER=.*?(?=[* ])/DEFINER=CURRENT_USER/;' >  "${backupdir}/db_transformed.sql"
# mysql --defaults-file=$mycnf < "${backupdir}/db_transformed.sql"

rm "${homedir}/SITE_FQDN"
rm $mycnf
