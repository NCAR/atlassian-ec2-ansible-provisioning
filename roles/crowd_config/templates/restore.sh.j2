#!/bin/bash

APP=crowd
backupdir=$1

if test -z $backupdir || ! test -d $backupdir; then
   cat << EOF
Usage: $0 backup_dir

Restore database and home directory for app "$APP";
backupdir must contain files home.tgz and db.sql.gz

THE APPLICATION SHOULD BE STOPPED BEFORE RESTORE!
EOF
exit 1
fi

if systemctl is-active --quiet $APP; then
    echo "Service \"$APP\" is running; must be stopped before restore."
    exit 1
fi

if ! test -e "${backupdir}/home.tgz"; then
    echo "Backup dir is missing file home.tgz"
    exit 1
fi

if ! test -e "${backupdir}/db.sql.gz"; then
    echo "Backup dir is missing file db.sql.gz"
    exit 1
fi

#
# Restore home directory
#
excludes=$(mktemp)
cat <<EXCLUDES >$excludes
*/crowd.cfg.xml
./logs/*
./log/*
EXCLUDES

homedir="/var/atlassian/application-data/${APP}"
echo "Restoring home directory"
tar -C $homedir -X $excludes -zxf "${backupdir}/home.tgz" .
chown -R {{ atl_product_user }}:{{ atl_product_user }} $homedir
rm $excludes

mycnf=$(/usr/local/bin/create_mycnf.sh)

# Change the baseurl FQDN in the dump to our current one on restore
src_site_fqdn=$(cat "${homedir}/SITE_FQDN")
target_site_fqdn=$(mysql --defaults-file=$mycnf -sre "select property_value from cwd_property where property_name = 'base.url';" | perl -ne 'm(\Qhttps://\E(.*)) && print $1;')

echo "Restoring database"
gunzip < "${backupdir}/db.sql.gz" \
    | perl -pe "s/\Q$src_site_fqdn\E/$target_site_fqdn/g" \
    | perl -pe 's/DEFINER=.*?(?=[* ])/DEFINER=CURRENT_USER/;' \
    | mysql --defaults-file=$mycnf

## Save transformed db dump for debugging
#
# gunzip < "${backupdir}/db.sql.gz" \
#     | perl -pe "s/\Q$src_site_fqdn\E/$target_site_fqdn/g" \
#     | perl -pe 's/DEFINER=.*?(?=[* ])/DEFINER=CURRENT_USER/;' >  "${backupdir}/db_transformed.sql"
# mysql --defaults-file=$mycnf < "${backupdir}/db_transformed.sql"

rm "${homedir}/SITE_FQDN"
rm $mycnf
