---

# This file is the place for cross-role defaults for all products, and
# common parameters from the infrastructure-deployment phase of the
# build (e.g. CloudFormation). Variables defined here will override
# those defined in `<role>/defaults/main.yml`, although defaults
# should usually be defined there too. For variable precedence
# information see:
#
#    https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html

java_major_version: "17"
#postgres_version: "9.6"
git_version: "2.14.4"

aws_region: "{{ lookup('amazon.aws.aws_ssm', 'AWS_REGION') }}"

atl_aws_default_tags: "{{ lookup('amazon.aws.aws_ssm', 'ATL_AWS_DEFAULT_TAGS') | from_json }}"
atl_backup_time: "{{ lookup('amazon.aws.aws_ssm', 'ATL_BACKUP_TIME') }}"
atl_backups_retained: "{{ lookup('amazon.aws.aws_ssm', 'ATL_BACKUPS_RETAINED') }}"

atl_db_app_config: "{{ lookup('amazon.aws.aws_ssm', 'ATL_DB_APP_CONFIG') | from_json }}"
atl_db_engine: "{{ lookup('amazon.aws.aws_ssm', 'ATL_DB_ENGINE') }}"
atl_db_general_type: "{{ lookup('amazon.aws.aws_ssm', 'ATL_DB_GENERAL_TYPE') or 'mysql' }}"
atl_db_host: "{{ lookup('amazon.aws.aws_ssm', 'ATL_DB_HOST') }}"
atl_db_port: "{{ lookup('amazon.aws.aws_ssm', 'ATL_DB_PORT') }}"
atl_dbuser_credential_secret_arn: "{{ lookup('amazon.aws.aws_ssm', 'ATL_DBUSER_CREDENTIAL_SECRET_ARN') }}"
atl_jdbc_db_name: "{{ lookup('amazon.aws.aws_ssm', 'ATL_JDBC_DB_NAME') }}"
atl_playbooks: "{{ lookup('amazon.aws.aws_ssm', 'ATL_PLAYBOOKS') }}"
atl_product_edition: "{{ lookup('amazon.aws.aws_ssm', 'ATL_PRODUCT_EDITION') }}"
atl_product_version: "{{ lookup('amazon.aws.aws_ssm', 'ATL_PRODUCT_VERSION') }}"
atl_proxy_name: "{{ lookup('amazon.aws.aws_ssm', 'ATL_PROXY_NAME') }}"
atl_rds_master_credential_secret_arn: "{{ lookup('amazon.aws.aws_ssm', 'ATL_RDS_MASTER_CREDENTIAL_SECRET_ARN') }}"
atl_s3_path: "{{ lookup('amazon.aws.aws_ssm', 'ATL_S3_PATH') }}"
atl_tomcat_proxyport: "{{ lookup('amazon.aws.aws_ssm', 'ATL_TOMCAT_PROXYPORT') }}"
atl_tomcat_scheme: "{{ lookup('amazon.aws.aws_ssm', 'ATL_TOMCAT_SCHEME') }}"
atl_tomcat_secure: "{{ lookup('amazon.aws.aws_ssm', 'ATL_TOMCAT_SECURE') }}"
atl_use_aws_secrets_for_db: "{{ lookup('amazon.aws.aws_ssm', 'ATL_USE_AWS_SECRETS_FOR_DB') }}"

# Vars with defaults
atl_home_base: "{{ lookup('amazon.aws.aws_ssm', 'ATL_HOME_BASE')' or '/var/atlassian/application-data' }}"
atl_installation_base: "{{ lookup('amazon.aws.aws_ssm', 'ATL_INSTALLATION_BASE')' or '/opt/atlassian' }}"


# #
# # Variable defaults
# #
# atl_apptunnel_port: ''
# atl_atlassian_acli_download_url: https://appfire.atlassian.net/wiki/download/attachments/60562669/acli-12.1.0-linux-amd64.zip
# atl_aws_enable_cloudwatch: false
# atl_aws_enable_cloudwatch_logs: false
# atl_catalina_opts: ''
# atl_db_driver: com.mysql.cj.jdbc.Driver
# atl_db_maxidle: 20
# atl_db_maxwaitmillis: 30000
# atl_db_minevictableidletimemillis: 5000
# atl_db_minidle: 10
# atl_db_poolmaxsize: 100
# atl_db_poolminsize: 20
# atl_db_removeabandoned: true
# atl_db_removeabandonedtimeout: 300
# atl_db_testonborrow: false
# atl_db_testwhileidle: true
# atl_db_timebetweenevictionrunsmillis: 30000
# atl_db_type: mysql8
# atl_download_secret_name: ''
# atl_enable_cluster: false
# 
# atl_jdbc_collation: en_US.UTF-8
# atl_jdbc_ctype: en_US.UTF-8
# atl_jdbc_dialect: org.hibernate.dialect.MySQLDialect
# atl_jdbc_encoding: UTF-8
# atl_jdbc_template: template1
# atl_jvm_heap: 2048m
# atl_jvm_opts: ''
# atl_mysql_jdbc_connector: mysql-connector-j-8.0.33
# atl_mysql_jdbc_connector_url: https://cdn.mysql.com/archives/mysql-connector-java-8.0/mysql-connector-j-8.0.33.tar.gz
# atl_mysqlsh_url: https://dev.mysql.com/get/Downloads/MySQL-Shell/mysql-shell_8.4.4-1ubuntu22.04_amd64.deb
# atl_product_user_uid: 2001
# atl_ssl_proxy: false
# atl_tomcat_acceptcount: 10
# atl_tomcat_connectiontimeout: 20000
# atl_tomcat_contextpath: ''
# atl_tomcat_enablelookups: false
# atl_tomcat_lib_dir: lib
# atl_tomcat_maxthreads: 200
# atl_tomcat_minsparethreads: 10
# atl_tomcat_port: 8080
# atl_tomcat_protocol: HTTP/1.1
# atl_tomcat_redirectport: ''
# atl_tomcat_scheme: http
# atl_tomcat_secure: false
# atl_use_aws_secrets_for_db: true

# - name: Set default facts
#   set_fact:
#     "{{ item.key }}": "{{ item.value }}"
#   with_items: atl_var_defaults
  
#
# Derived variables
#
atl_shared_mountpoint: "{{ atl_product_home }}"
atl_product_home: "{{ atl_home_base }}/{{ atl_product_family }}"
atl_product_shared_home_map:
  confluence: "shared-home"
  jira: "shared"
  stash: "shared"
  crowd: "shared"
atl_product_home_shared: "{{ atl_shared_mountpoint }}/{{ atl_product_shared_home_map[atl_product_family] }}"

atl_product_shared_plugins: "{{ atl_product_home_shared }}/plugins/installed-plugins"
atl_product_installation_base: "{{ atl_installation_base }}/{{ atl_product_edition }}"
atl_product_installation_versioned: "{{ atl_product_installation_base }}/{{ atl_product_version }}"
atl_product_installation_current: "{{ atl_product_installation_base }}/current"
atl_installer_temp: "{{ atl_installation_base }}/tmp"
atl_java_home: "{{ '/usr/lib/jvm/java' if atl_use_system_jdk | bool else (atl_product_installation_current + '/jre') }}"
atl_java_binary: "{{ atl_java_home }}/bin/java"

atl_product_logs_default: &logs_default
  - path: "{{ atl_product_installation_current }}/logs/*"
    type: product
  - path: "{{ atl_product_home }}/logs/*"
    type: product
  - path: "{{ atl_product_home }}/log/*"
    type: product
  - path: "{{ atl_product_home }}/logs/audit/*"
    type: audit
  - path: "{{ atl_product_home }}/log/audit/*"
    type: audit
  - path: "/var/log/ansible-bootstrap.log"
    type: provisioning
  - path: "/var/log/cfn-*.log"
    type: provisioning

atl_product_logs:
  confluence:
    *logs_default
  jira:
    *logs_default
  stash:
    *logs_default
  crowd:
    *logs_default

atl_db_engine_to_db_type_map:
  aurora_postgres: "postgresaurora96"
  rds_postgres: "postgres72"
  rds_mysql: "mysql8"

atl_jdbc_user: "{{ atl_jdbc_credential | json_query('user') }}"
atl_jdbc_password: "{{ atl_jdbc_credential | json_query('password') }}"

atl_jdbc_query_params_for_engine:
  aurora_postgres: "?targetServerType=master"
  rds_mysql: 
    crowd: "?useUnicode=true&amp;characterEncoding=UTF8&amp;sessionVariables=default_storage_engine=InnoDB&amp;rewriteBatchedStatements=true"
atl_jdbc_url: "jdbc:{{ atl_db_general_type }}://{{ atl_db_host }}:{{ atl_db_port }}/{{ atl_jdbc_db_name }}{{ atl_jdbc_query_params_for_engine[atl_db_engine][atl_product_family]| default('') }}"

atl_jvm_custom_opts_dir: "{{ atl_product_installation_current }}/bin/jvm_custom_opts.d"

atl_rds_master_user: "{{ atl_rds_master_credential | json_query('username') }}"
atl_rds_master_password: "{{ atl_rds_master_credential | json_query('password') }}"

atl_clone_bucket_root: "{{ atl_clone_bucket }}/{{ atl_proxy_name }}"

atl_db_dump_root: ="{{ atl_home_base }}/db_backup"

atl_base_url: "{{ atl_base_url | default('https://' + atl_proxy_name, true) }}"

# Use secretsmanager directly (jira)
atl_secretsmanager_aws_secret_id: "{{ atl_dbuser_credential_secret_arn }}"

#
# Variables from ssm
#
tasks:
  - name: Set facts from SSM
    set_fact:
      "{{ item.key }}": "{{ item.value }}"
    loop: "{{ lookup('amazon.aws.aws_ssm', '/{{ atl_proxy_name}}/', {{ atl_aws_region }}, bypath=true, droppath=true) | dict2items }}"


  - name: Abort run
    ansible.builtin.fail:
      msg: Abort run

